@model Gaspra.Roulette.Api.Models.RouletteViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>Roulette</title>

    <script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-U1DAWAznBHeqEIlVSCgzq+c9gqGAJn5c/t99JyeKa9xxaYpSvHU5awsuZVVFIhvj" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">
    <link rel="icon" type="image/x-icon" href="~/images/favicon.ico">
    <link rel="stylesheet" href="roulette.css">
    <meta name="viewport" content="initial-scale=0.5, width=device-width">

</head>
<body>
<div id="back"></div>
<div class="container" id="pageContent">
    <div class="col-12" style="color: rgb(255,255,255);">
        <h1><b>Roulette</b></h1></div>
    <div class="accordion col-12" id="rouletteAccordion">
        <div class="accordion-item">
            <h2 class="accordion-header" id="accordionHeaderPlayer">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseAccordionPlayer" aria-expanded="true" aria-controls="collapseAccordionPlayer">
                    <h3>Players</h3>
                </button>
            </h2>
            <div id="collapseAccordionPlayer" class="accordion-collapse collapse show" aria-labelledby="accordionHeaderPlayer" data-bs-parent="#accordionPlayer">
                <div class="accordion-body">
                    <table class="table">
                        <thead>
                        <tr>
                            <th scope="col" class="d-none">Identifier</th>
                            <th scope="col" class="col-1">Playing</th>
                            <th scope="col" class="col-4">Name</th>
                            <th scope="col" class="col-2">Tokens</th>
                            <th scope="col" class="col-2">Spike Tokens</th>
                            <th scope="col" class="col-3"></th>
                        </tr>
                        </thead>
                        <tbody>
                        @{
                            var totalTokens = Model.Players.Where(p => p.Active).Sum(p => p.TokenAllowance);

                            foreach (var player in Model.Players.OrderByDescending(p => p.Active).ThenBy(p => p.Name))
                            {
                                <tr>
                                    <td class="d-none">@player.Identifier</td>
                                    <td style="text-align: center">
                                        @if (player.Active)
                                        {
                                            <i class="bi bi-check"></i>
                                        }
                                        else
                                        {
                                            <i class="bi bi-x"></i>
                                        }
                                    </td>
                                    <td>
                                        <div style="font-size: medium">@player.Name</div></td>
                                    <td>@player.TokenAllowance</td>
                                    <td>@player.TokenSpikeAllowance</td>
                                    <td>
                                        <button type="button" class="btn btn-danger" onclick="UpdateModal('@player.Identifier', '@player.Name', @player.TokenAllowance, @player.TokenSpikeAllowance, @totalTokens, @Convert.ToInt32(player.Active))" data-bs-toggle="modal" data-bs-target="#playerModal">Details</button>
                                    </td>
                                </tr>
                            }
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="accordion-item">
            <h2 class="accordion-header" id="accordionHistoryHeader">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseAccordionHistory" aria-expanded="true" aria-controls="collapseAccordionHistory">
                    <h3>History</h3>
                </button>
            </h2>
            <div id="collapseAccordionHistory" class="accordion-collapse collapse" aria-labelledby="accordionHistoryHeader" data-bs-parent="#accordionJoinGame">
                <div class="accordion-body">
                    <div class="row align-items-start">
                        <div class="col-4">
                            <img src="Images/richardroulette.png" width="100%"/>
                        </div>
                        <div class="col-8">
                            <table class="table">
                                <thead>
                                <tr>
                                    <th scope="col" class="col-7">Name</th>
                                    <th scope="col" class="col-5">Rolled</th>
                                </tr>
                                </thead>
                                <tbody>
                                @{
                                    foreach (var historicalRoll in Model.HistoricalRolls.OrderByDescending(h => h.RollTimestamp))
                                    {
                                        <tr>
                                            <td>
                                                <div style="font-size: medium">@historicalRoll.Name</div></td>
                                            <td>@historicalRoll.RollTimestamp.ToString("h:mm tt")</td>
                                        </tr>
                                    }
                                }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="accordion-item">
            <h2 class="accordion-header" id="accordionJoinGameHeader">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseAccordionJoinGame" aria-expanded="true" aria-controls="collapseAccordionJoinGame">
                    <h3>Join</h3>
                </button>
            </h2>
            <div id="collapseAccordionJoinGame" class="accordion-collapse collapse" aria-labelledby="accordionJoinGameHeader" data-bs-parent="#accordionJoinGame">
                <div class="accordion-body">
                    <form class="row g-3">
                        <label for="nameInput" class="form-label">Enter your name (names must be unique, and can be up to 7 characters long):</label>
                        <input type="text" class="form-control" id="nameInput" placeholder="Name" maxlength="7" required>
                        <label for="secretInput" class="form-label">Enter a secret word/ phrase to verify that it's you later on:</label>
                        <input type="text" class="form-control" id="secretInput" placeholder="Secret" maxlength="255" required>
                        <div class="col-auto">
                            <button id="joinButton" class="btn btn-success mb-3">Join!</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

</div>

<div class="modal fade" id="playerModal" tabindex="-1" aria-labelledby="playerModalLabel" aria-hidden="true" style="z-index: 20;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="playerModalLabel">
                        <!--title-->
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="playerModalBody">
                    <!--body-->
                </div>
                <div class="modal-footer" id="playerToggle">
                    <!--footer-->
                </div>
            </div>
        </div>
    </div>

<script>
        function UpdateModal(identifier, name, tokenAllowance, spikeAllowance, totalTokens, active)
        {
            $.ajax({
                type: "GET",
                url: "Players/"+identifier+"/History",
                success: function (response) {

                    var historyValue = response;

                    $("#playerModalLabel").html(
                        "<div style=\"font-size: small\">" + "</div><div style=\"font-size: medium\">" + name + "</div>"
                    );

                    $("#playerModalBody").html(
                        "<p>" +
                        name +
                        " has <b>" +
                        tokenAllowance +
                        "/ " +
                        totalTokens +
                        "</b> tokens, there's a <b>" +
                        ((100/totalTokens)*tokenAllowance).toFixed(2) +
                        "%</b> chance to be picked next time! " +
                        name +
                        "'s been picked <b>" +
                        historyValue +
                        "</b> times.</p><p>" +
                        name +
                        " has <b>" +
                        spikeAllowance +
                        "</b> spike tokens to pick on other players with! </p>" +
                        "<label for=\"spikeInput\" class=\"form-label\">Enter player name to spike:</label>" +
                        "<input type=\"text\" class=\"form-control\" id=\"spikeInput\" placeholder=\"Name\" maxlength=\"7\" required>" +
                        "<label for=\"secretConfirmationInput\" class=\"form-label\">Enter secret (to confirm it's you!):</label>" +
                        "<input type=\"text\" class=\"form-control\" id=\"secretConfirmationInput\" placeholder=\"Secret\" maxlength=\"255\" required>"
                    );

                    var toggleText = "";

                    if (active === 1) {
                        toggleText = "Pause Playing";
                    } else {
                        toggleText = "Resume Playing";
                    }

                    $("#playerToggle").html(
                        "<button type=\"button\" class=\"btn btn-danger\" onclick=\"SpikePlayer('" + name + "')\">" +
                            "Spike!" +
                        "</button>" +
                        "<button type=\"button\" class=\"btn btn-success\" onclick=\"TogglePlayer('" + identifier + "')\">" +
                            toggleText +
                        "</button>" +
                        "<button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>"
                    );
                }
            });
        }

        function TogglePlayer(identifier)
        {
            $.post("Players/Toggle?identifier="+identifier)
                .done(function() {
                    ShowModal("Toggled", data.reason, true);
                })
                .fail(function () {
                    ShowModal("Toggled", "Player toggle failed! Try again...", false);
                });
        }

        $(document).ready(function () {
            $('#joinButton').click(function (event) {
                event.preventDefault();
                AddPlayer();
            });
        });

        function SpikePlayer(name)
        {
            var attacker = name;

            var secret = $('#secretConfirmationInput').val();

            var target = $('#spikeInput').val();

            $.post("Players/Spike?attacker="+attacker+"&secret="+secret+"&target="+target)
                .done(function (data){
                    ShowModal("Spiked!", data.reason, true);
                })
                .fail(function (data){
                    ShowModal("Uh oh!", data.responseJSON.reason, false);
                });
        }

        function AddPlayer()
        {
            var name = $('#nameInput').val();

            var secret = $('#secretInput').val();

            $.post("Players/New?name="+name+"&secret="+secret)
                .done(function (data){
                    ShowModal("Yey!", data.reason, true);
                })
                .fail(function (data){
                    ShowModal("Uh oh!", data.responseJSON.reason, false);
                });
        }

        function ShowModal(title, message, reloadOnClose)
        {
            $("#playerModalLabel").html(
                "<div style=\"font-size: medium\">" + title + "</div>"
            );

            $("#playerModalBody").html(
                "<p>" + message + "</p>"
            );

            var reloadAction = "onclick=\"Reload()\" ";

            if (!reloadOnClose)
            {
                reloadAction = "data-bs-dismiss=\"modal\"";
            }

            $("#playerToggle").html(
                "<button type=\"button\" class=\"btn btn-secondary\" " + reloadAction + ">Close</button>"
            );

            $('#playerModal').modal('show');
        }

        function Reload()
        {
            setTimeout(function () {
                location.reload();
            }, 50);
        }
    </script>

</body>
</html>
